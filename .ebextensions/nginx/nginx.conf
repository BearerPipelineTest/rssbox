# The main purpose of this custom nginx config is to enable configuration of SSL certificates.
# If you don't need nginx to terminate SSL, then feel free to delete this file.
# The first time you create an app, you have to comment out the ssl_* configuration because the cert does not exist yet.
# You can use EFS to preserve the files in /etc/letsencrypt if the server is replaced.

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
  log_format main    '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
  log_format healthd '$msec"$uri"'
                     '$status"$request_time"$upstream_response_time"'
                     '$http_x_forwarded_for';

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  types_hash_max_size 2048;

  # increase timeouts
  keepalive_timeout     300;
  proxy_connect_timeout 300;
  proxy_send_timeout    300;
  proxy_read_timeout    300;
  send_timeout          300;

  index         index.html index.htm;
  charset_types utf-8;
  charset       utf-8;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Load modular configuration files from the /etc/nginx/conf.d directory.
  # See http://nginx.org/en/docs/ngx_core_module.html#include
  # for more information.
  #include /etc/nginx/conf.d/*.conf;

  server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  _;
    root         /var/app/current/public;
    try_files    $uri @app;

    ssl_certificate           /etc/letsencrypt/live/eb/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/eb/privkey.pem;
    ssl_session_timeout       5m;
    ssl_protocols             TLSv1.1 TLSv1.2;
    ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
      set $year $1;
      set $month $2;
      set $day $3;
      set $hour $4;
    }
    access_log /var/log/nginx/access.log main;
    access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;

    # redirect trailing dot in domain name
    if ($http_host ~ \.$) {
      rewrite ^(.*) $scheme://$host$1 permanent;
    }

    # deny access to files starting with dot
    location ~ /\. {
      deny all;
    }

    location @app {
      proxy_pass http://unix:/var/run/puma/my_app.sock;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Url $scheme://$host$request_uri;
    }
  }

  server {
    listen 80;
    server_name _;

    location / {
      return 301 https://$host$request_uri;
    }

    location /.well-known/  {
      root /var/www/acme-challenge;
    }
  }
}
